import { AccessHelper, OrgHelper, User } from "@propelauth/javascript";
import React from "react";
import { Subtract } from "utility-types";
export declare type WithLoggedInAuthInfoProps = {
    isLoggedIn: true;
    accessToken: string;
    user: User;
    orgHelper: OrgHelper;
    accessHelper: AccessHelper;
    refreshAuthInfo: () => Promise<void>;
};
export declare type WithNotLoggedInAuthInfoProps = {
    isLoggedIn: false;
    accessToken: null;
    user: null;
    orgHelper: null;
    accessHelper: null;
    refreshAuthInfo: () => Promise<void>;
};
export declare type WithAuthInfoProps = WithLoggedInAuthInfoProps | WithNotLoggedInAuthInfoProps;
export interface WithAuthInfoArgs {
    displayWhileLoading?: React.ReactElement;
}
export declare function withAuthInfo<P extends WithAuthInfoProps>(Component: React.ComponentType<P>, args?: WithAuthInfoArgs): React.ComponentType<Subtract<P, WithAuthInfoProps>>;
